// Code generated by MockGen. DO NOT EDIT.
// Source: internal/storage/database/dbwallet.go

// Package mocks is a generated GoMock package.
package mocks

import (
	context "context"
	reflect "reflect"

	models "github.com/BelyaevEI/e-wallet/internal/models"
	gomock "github.com/golang/mock/gomock"
)

// MockWalletStorage is a mock of WalletStorage interface.
type MockWalletStorage struct {
	ctrl     *gomock.Controller
	recorder *MockWalletStorageMockRecorder
}

// MockWalletStorageMockRecorder is the mock recorder for MockWalletStorage.
type MockWalletStorageMockRecorder struct {
	mock *MockWalletStorage
}

// NewMockWalletStorage creates a new mock instance.
func NewMockWalletStorage(ctrl *gomock.Controller) *MockWalletStorage {
	mock := &MockWalletStorage{ctrl: ctrl}
	mock.recorder = &MockWalletStorageMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockWalletStorage) EXPECT() *MockWalletStorageMockRecorder {
	return m.recorder
}

// CheckAmount mocks base method.
func (m *MockWalletStorage) CheckAmount(ctx context.Context, id uint32) (float64, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "CheckAmount", ctx, id)
	ret0, _ := ret[0].(float64)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// CheckAmount indicates an expected call of CheckAmount.
func (mr *MockWalletStorageMockRecorder) CheckAmount(ctx, id interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "CheckAmount", reflect.TypeOf((*MockWalletStorage)(nil).CheckAmount), ctx, id)
}

// CheckWallet mocks base method.
func (m *MockWalletStorage) CheckWallet(ctx context.Context, id uint32) (bool, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "CheckWallet", ctx, id)
	ret0, _ := ret[0].(bool)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// CheckWallet indicates an expected call of CheckWallet.
func (mr *MockWalletStorageMockRecorder) CheckWallet(ctx, id interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "CheckWallet", reflect.TypeOf((*MockWalletStorage)(nil).CheckWallet), ctx, id)
}

// CreateWallet mocks base method.
func (m *MockWalletStorage) CreateWallet(ctx context.Context, id uint32) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "CreateWallet", ctx, id)
	ret0, _ := ret[0].(error)
	return ret0
}

// CreateWallet indicates an expected call of CreateWallet.
func (mr *MockWalletStorageMockRecorder) CreateWallet(ctx, id interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "CreateWallet", reflect.TypeOf((*MockWalletStorage)(nil).CreateWallet), ctx, id)
}

// GetAllWallet mocks base method.
func (m *MockWalletStorage) GetAllWallet() ([]models.Wallet, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetAllWallet")
	ret0, _ := ret[0].([]models.Wallet)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetAllWallet indicates an expected call of GetAllWallet.
func (mr *MockWalletStorageMockRecorder) GetAllWallet() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetAllWallet", reflect.TypeOf((*MockWalletStorage)(nil).GetAllWallet))
}

// GetBalance mocks base method.
func (m *MockWalletStorage) GetBalance(ctx context.Context, id uint32) (models.Wallet, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetBalance", ctx, id)
	ret0, _ := ret[0].(models.Wallet)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetBalance indicates an expected call of GetBalance.
func (mr *MockWalletStorageMockRecorder) GetBalance(ctx, id interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetBalance", reflect.TypeOf((*MockWalletStorage)(nil).GetBalance), ctx, id)
}

// TransferFunds mocks base method.
func (m *MockWalletStorage) TransferFunds(ctx context.Context, walletFrom, walletTo models.Wallet) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "TransferFunds", ctx, walletFrom, walletTo)
	ret0, _ := ret[0].(error)
	return ret0
}

// TransferFunds indicates an expected call of TransferFunds.
func (mr *MockWalletStorageMockRecorder) TransferFunds(ctx, walletFrom, walletTo interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "TransferFunds", reflect.TypeOf((*MockWalletStorage)(nil).TransferFunds), ctx, walletFrom, walletTo)
}
